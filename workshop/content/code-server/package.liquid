<style>
    pre.pastable {
        cursor: pointer;
    }
    pre.pastable_header {
      font-weight: bold;
      padding-bottom: 0px;
      background-color: BurlyWood;
    }

    span.editor_link {
      cursor:pointer;
       color:blue;
       text-decoration:underline;
    }
    span.editor_link:hover {
       text-decoration:none;
       text-shadow: 1px 1px 1px #555;
    }
</style>
    
<script>

    function retryOnFail(name, retries, chunk) {
        var promise = chunk();
        promise.done(function () {
            console.log(name + " SUCCESS");
        })
        .fail(function () {
            console.log(name + " FAIL");
            if (retries>0) {
                    setTimeout(
                        function () {
                            console.log(name +" Retrying...");
                            retryOnFail(name, retries-1, chunk);
                        },
                        1000
                    );
                }
        });
    }

    var code_server = {
        url: "{{ingress_protocol}}://{{session_namespace}}.{{ingress_domain}}/code-server",

        open_file: function(file, lineno=1) {
            retryOnFail("code_server.open_file", 15, function () {
                eduk8s.expose_dashboard("editor");
                return $.get(code_server.url+"/editor/line?file="+encodeURIComponent(file)+"&line="+encodeURIComponent(lineno));
            });
        },

        paste_in_file: function(file, prefix, paste) {
            console.log("paste = ''"+paste+"'");
            retryOnFail("code_server.paste_in_file", 15, function () {
                eduk8s.expose_dashboard("editor");
                var url = code_server.url+"/editor/paste?file="+encodeURIComponent(file)+"&prefix="+encodeURIComponent(prefix)+"&paste="+encodeURIComponent(paste);
                console.log("request url = "+url);
                return $.get(url);
            });
        }
    };

    //insprired by workshop-markdown.js
    $(document).ready(function() {
        $('pre.pastable').each(function() {
            let pasteText = $(this).text();
            let prefix = $(this).attr('data-prefix');
            let file = $(this).attr('data-file');
            $(this).empty();
            $(this).append('<span class="copy-glyph fas fa-copy" aria-hidden="true"></span>');
            $(this).append($('<pre class="pastable_header">').text('file: '+file));
            $(this).append($('<code>').text(pasteText));
            $(this).click(function(event) {
                console.log("Paste text = "+pasteText);
                console.log("Prefix = "+prefix);
                console.log("File = "+file);
                code_server.paste_in_file(file, prefix, pasteText);
            });
        })

        $('span.editor_link').each(function () {
            let text = $(this).text();
            let lineno = $(this).attr('data-line');
            if (!text) {
                //produce our own text from file and lineno
                text = file;
                if (lineno) {
                    text += ' line: ' +lineno;
                } else {
                    lineno = 1;
                }
                $(this).text(text);
            }
            $(this).click(function () {
                code_server.open_file(file, lineno);
            });
        });
    });

</script>
